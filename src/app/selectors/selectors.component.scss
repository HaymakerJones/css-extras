@import url('https://fonts.googleapis.com/css?family=Crimson+Text:400,700');

// This is all just for styling purposes.
// The demo content is lower down.

*, *::before, *::after {
    box-sizing: border-box;
    margin-top: 0;
  }
  
  body {
    background: #f5f5f5;
    color: #18314F;
    font-family: 'Crimson Text', serif;
    font-size: 1.5rem;
  }
  
  h1 {
    text-align: center;
    font-size: 2rem;
    text-transform: uppercase;
    letter-spacing: 15px;
    line-height: 1;
    font-weight: 400;
    margin: 3em 0;
  }
  
  h2 {
    font-weight: 400;
    text-transform: uppercase;
    font-size: 1rem;
    margin-bottom: 3em;
    letter-spacing: 8px;
    text-align: center;
    color: #8BBEB2;
  }
  
  h2::after {
    content: '';
    display: block;
    border-bottom: 1px solid rgba(#18314F, .25);
    width: 20%;
    margin: 3em auto 0;
  }
  
  h2 span {
    font-size: 5em;
    font-weight: 700;
    display: block;
    color: #18314F;
  }
  
  a {
    color: #8BBEB2;
    
    &:hover {
      color: #7AE7C7;
    }
  }
  
  section {
    background: white;
    box-shadow: 0 0 20px rgba(0,0,0,.25);
    width: 80%;
    margin: 50px auto;
    padding: 50px;
  }
  
  a {
    
  }
  
  .universal {
    code {
      background: #C3DDD7;
      padding: .25em;
    }
  }
  
  
  .direct-children {
    .example {
      padding: 1em;
      background: #C3DDD7;
      
      p {
        margin: 0;
      }
    }
  }
  
  
  .adjacent-sibling .box {
    height: 75px;
    width: 75px;
    background: rgba(0,0,0,.5);
    display: inline-block;
  }
  
  .general-sibling .box {
    height: 75px;
    width: 75px;
    background: rgba(0,0,0,.5);
    display: inline-block;
  }

  //Universal Selector
  .universal {
    * {                                 //Generally used for resetting
        background: red;

        &::before, &::after {
            background: red;           //You need to specify pseudo elements as well
        }
    }
  }

  //direct children
  .direct-children {
    > p {
          color: red;
      }
  }

  //Adjacent sibling
  .adjacent-sibling  {
    .box + .box {           //Selects only the adjacent to the match
        background: red;
    }
  }

  //General Sibling
  .general-sibling  {
    .box ~ .box {           //Selects ALL as long as there is one match
        background: red;
    }
  }

  //Attribute selector
  a[target] {
      color: darkblue;
  }

  a[class|="another"] {
      color: darkgreen;
  }

  a[href^="http"] {     //selects all http and https
      color: orange;
  }

  a[href*="google"] {       //selects anything with google
      color: black;
  }

  a[href$="ca"] {
      color: blueviolet;        //Selects extensions
  }
  